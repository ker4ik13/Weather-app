{"ast":null,"code":"var _jsxFileName = \"/Users/ker4ik13/Desktop/web/pet projects/weather-app/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '109440449518b43abeb4e646cc838d3f';\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      temp: undefined,\n      feelsLike: undefined,\n      humidity: undefined,\n      pressure: undefined,\n      tempMax: undefined,\n      tempMin: undefined,\n      city: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      visibility: undefined,\n      windSpeed: undefined,\n      error: undefined\n    };\n    this.gettingWeather = async () => {\n      const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Moscow&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n      console.log(data);\n      this.setState({\n        temp: data.main.temp,\n        feelsLike: data.main.feels_like,\n        humidity: data.main.humidity,\n        pressure: data.main.pressure,\n        tempMax: data.main.temp_max,\n        tempMin: data.main.temp_min,\n        city: data.name,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        visibility: data.visibility,\n        windSpeed: data.wind.speed,\n        error: undefined\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        weather: this.gettingWeather,\n        city: this.state.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n}\n;\nexport default App;","map":{"version":3,"names":["React","Header","Main","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","App","Component","constructor","arguments","state","temp","undefined","feelsLike","humidity","pressure","tempMax","tempMin","city","sunrise","sunset","visibility","windSpeed","error","gettingWeather","api_url","fetch","data","json","console","log","setState","main","feels_like","temp_max","temp_min","name","sys","wind","speed","render","children","weather","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ker4ik13/Desktop/web/pet projects/weather-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nconst API_KEY = '109440449518b43abeb4e646cc838d3f';\n\nclass App extends React.Component{\n  state = {\n    temp: undefined,\n    feelsLike: undefined,\n    humidity: undefined,\n    pressure: undefined,\n    tempMax: undefined,\n    tempMin: undefined,\n    city: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    visibility: undefined,\n    windSpeed: undefined,\n    error: undefined,\n    }\n\n  gettingWeather = async () => {\n    const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Moscow&appid=${API_KEY}&units=metric`);\n    const data = await api_url.json();\n    console.log(data);\n    this.setState({\n      temp: data.main.temp,\n      feelsLike: data.main.feels_like,\n      humidity: data.main.humidity,\n      pressure: data.main.pressure,\n      tempMax: data.main.temp_max,\n      tempMin: data.main.temp_min,\n      city: data.name,\n      sunrise: data.sys.sunrise,\n      sunset: data.sys.sunset,\n      visibility: data.visibility,\n      windSpeed: data.wind.speed,\n      error: undefined,\n    })\n  }\n\n\n  render(){\n    return(\n      <><Header weather = {this.gettingWeather} city = {this.state.city}/>\n      <Main/>\n      <Footer/></>\n    )\n  }\n};\n\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,GAAG,SAAST,KAAK,CAACU,SAAS;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC/BC,KAAK,GAAG;MACNC,IAAI,EAAEC,SAAS;MACfC,SAAS,EAAED,SAAS;MACpBE,QAAQ,EAAEF,SAAS;MACnBG,QAAQ,EAAEH,SAAS;MACnBI,OAAO,EAAEJ,SAAS;MAClBK,OAAO,EAAEL,SAAS;MAClBM,IAAI,EAAEN,SAAS;MACfO,OAAO,EAAEP,SAAS;MAClBQ,MAAM,EAAER,SAAS;MACjBS,UAAU,EAAET,SAAS;MACrBU,SAAS,EAAEV,SAAS;MACpBW,KAAK,EAAEX;IACP,CAAC;IAAA,KAEHY,cAAc,GAAG,YAAY;MAC3B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,kEAAiErB,OAAQ,eAAc,CAAC;MACrH,MAAMsB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAI,EAAE;MACjCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,IAAI,CAACI,QAAQ,CAAC;QACZpB,IAAI,EAAEgB,IAAI,CAACK,IAAI,CAACrB,IAAI;QACpBE,SAAS,EAAEc,IAAI,CAACK,IAAI,CAACC,UAAU;QAC/BnB,QAAQ,EAAEa,IAAI,CAACK,IAAI,CAAClB,QAAQ;QAC5BC,QAAQ,EAAEY,IAAI,CAACK,IAAI,CAACjB,QAAQ;QAC5BC,OAAO,EAAEW,IAAI,CAACK,IAAI,CAACE,QAAQ;QAC3BjB,OAAO,EAAEU,IAAI,CAACK,IAAI,CAACG,QAAQ;QAC3BjB,IAAI,EAAES,IAAI,CAACS,IAAI;QACfjB,OAAO,EAAEQ,IAAI,CAACU,GAAG,CAAClB,OAAO;QACzBC,MAAM,EAAEO,IAAI,CAACU,GAAG,CAACjB,MAAM;QACvBC,UAAU,EAAEM,IAAI,CAACN,UAAU;QAC3BC,SAAS,EAAEK,IAAI,CAACW,IAAI,CAACC,KAAK;QAC1BhB,KAAK,EAAEX;MACT,CAAC,CAAC;IACJ,CAAC;EAAA;EAGD4B,MAAMA,CAAA,EAAE;IACN,oBACEtC,OAAA,CAAAE,SAAA;MAAAqC,QAAA,gBAAEvC,OAAA,CAACJ,MAAM;QAAC4C,OAAO,EAAI,IAAI,CAAClB,cAAe;QAACN,IAAI,EAAI,IAAI,CAACR,KAAK,CAACQ;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACpE5C,OAAA,CAACH,IAAI;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACP5C,OAAA,CAACF,MAAM;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA,gBAAG;EAEhB;AACF;AAAC;AAGD,eAAexC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}